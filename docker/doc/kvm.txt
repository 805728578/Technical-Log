apt install -y cpu-checker
kvm-ok
lsmod | grep kvm
apt-get install -y qemu qemu-kvm
apt-get install -y libvirt-daemon-system  libvirt-daemon  bridge-utils
apt-get install -y virtinst virt-manager  virt-viewer
apt-get install -y kernel-package linux-source build-essential

virsh list --all
brctl show

systemctl enable libvirtd
systemctl restart libvirtd
systemctl status libvirtd

CPU个数：
cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l
CPU核数：
cat /proc/cpuinfo| grep "cpu cores"| uniq
VCPU核数：
cat /proc/cpuinfo| grep "processor"| wc -l

物理机网络：

network:
    version: 2
    ethernets:
        eno1:
            dhcp4: false
        eno2:
            dhcp4: true
        eno3:
            dhcp4: true
        eno4:
            dhcp4: true
    bridges:
         virbr1:
            dhcp4: true
         vbr0:
            interfaces: [eno2]
            addresses:
                - 172.21.32.59/24
            gateway4: 172.21.32.254
            nameservers:
                addresses: [172.21.100.15, 172.21.100.11]
         vbr128:
            interfaces: [eno3]
            addresses:
                - 128.0.0.210/16
            routes:
                - to: 128.0.0.0/16
                  via: 128.0.0.254
         vbr129:
            interfaces: [eno4]
            addresses:
                - 129.0.0.210/16
            routes:
                - to: 129.0.0.0/16
                  via: 129.0.0.254

虚拟机配置：

network:
    version: 2
    ethernets:
        ens3:
            dhcp4: true
            addresses: [172.21.32.160/24]
            gateway4: 172.21.32.254
            nameservers:
                addresses: [172.21.100.15,172.21.100.11]
            routes:
                - to: 172.21.0.0/16
                  via: 172.21.32.254
        ens4:
            dhcp4: false
            addresses:
                - 128.0.0.160/16
            routes:
                - to: 128.0.0.0/16
                  via: 128.0.0.254
        ens5:
            dhcp4: false
            addresses:
                - 129.0.0.160/16
            routes:
                - to: 129.0.0.0/16
                  via: 129.0.0.254
        ens6:
            dhcp4: false
            addresses: [192.168.122.160/24]
            gateway4: 192.168.122.1
            nameservers:
                    addresses: [192.168.122.1]
        ens11:
            dhcp4: false
            addresses: [192.168.32.160/24]
            gateway4: 192.168.32.254
            nameservers:
                    addresses: [192.168.32.254]
    bonds:
        bond0:
            addresses: [10.32.0.160/24]
            gateway4: 10.32.0.254
            nameservers:
                    addresses: [10.32.0.254]
            interfaces: [ens6,ens11]


ifconfig vbr0 down
brctl delbr vbr0

ifconfig vbr128 down
brctl delbr vbr128
ifconfig vbr129 down
brctl delbr vbr129

netplan --debug apply

/etc/libvirt/qemu/

export DISPLAY=172.21.12.2:0.0
xhost +
virt-manager

#修改CPU，内存

virsh shutdown ics-server162
virsh setmaxmem ics-server160 16777216
virsh edit ics-server160
#修改xml信息
virsh start ics-server160
virsh setmem ics-server160 16777216
virsh setvcpus ics-server160 6


virt-viewer ics-serverl

virsh shutdown ics-serverl
virsh destroy ics-serverl
virsh undefine ics-serverl
rm -rf /home/kvm/disk/ics-serverl.img
qemu-img create -f qcow2 /home/kvm/disk/ics-serverl.img 300G


virt-install --name=ics-serverl \
--virt-type=kvm \
--vcpus=4 \
--memory=16384 \
--disk path=/home/kvm/disk/ics-serverl.img,bus=virtio \
--cdrom=/home/kvm/ubuntu-19.10-live-server-amd64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--console pty,target_type=virtio \
-v

virt-viewer ics-serverh

virsh shutdown ics-serverh
virsh destroy ics-serverh
virsh undefine ics-serverh
rm -rf /home/kvm/disk/ics-serverh.img
qemu-img create -f qcow2 /home/kvm/disk/ics-serverh.img 500G


virt-install --name=ics-serverh \
--virt-type=kvm \
--vcpus=6 \
--memory=16384 \
--disk path=/home/kvm/disk/ics-serverh.img,bus=virtio \
--cdrom=/home/kvm/ubuntu-19.10-live-server-amd64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--console pty,target_type=virtio \
-v

virt-viewer ics-server160

virsh shutdown ics-server160
virsh destroy ics-server160
virsh undefine ics-server160
rm -rf /home/kvm/disk/ics-server160.img
qemu-img create -f qcow2 /home/kvm/disk/ics-server160.img 500G


virt-install --name=ics-server160 \
--virt-type=kvm \
--vcpus=6 \
--memory=16384 \
--disk path=/home/kvm/disk/ics-server160.img,bus=virtio \
--cdrom=/home/kvm/ubuntu-19.10-live-server-amd64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--console pty,target_type=virtio \
-v


virsh shutdown ics-server161
virsh destroy ics-server161
virsh undefine ics-server161
rm -rf /home/kvm/disk/ics-server161.img
qemu-img create -f qcow2 /home/kvm/disk/ics-server161.img 500G


virt-install --name=ics-server161 \
--virt-type=kvm \
--vcpus=4 \
--memory=4096 \
--disk path=/home/kvm/disk/ics-server161.img,bus=virtio \
--cdrom=/home/kvm/ubuntu-19.10-live-server-amd64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--console pty,target_type=virtio \
-v

virsh shutdown ics-server162
virsh destroy ics-server162
virsh undefine ics-server162
rm -rf /home/kvm/disk/ics-server162.img
qemu-img create -f qcow2 /home/kvm/disk/ics-server162.img 500G


virt-install --name=ics-server162 \
--virt-type=kvm \
--vcpus=4 \
--memory=4096 \
--disk path=/home/kvm/disk/ics-server162.img,bus=virtio \
--cdrom=/home/kvm/ubuntu-19.10-live-server-amd64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--console pty,target_type=virtio \
-v

virt-viewer ics-server162

virt-viewer windows2016

virsh shutdown windows2016
virsh destroy windows2016
virsh undefine windows2016
rm -rf /home/kvm/disk/windows2016.img
qemu-img create -f qcow2 /home/kvm/disk/windows2016.img 300G


virt-install --name=windows2016 \
--virt-type=kvm \
--vcpus=2 \
--memory=4096 \
--boot cdrom  \
--disk path=/home/kvm/disk/windows2016.img,bus='ide' \
--cdrom=/home/kvm/cn_windows_server_2016_9718765_x64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--os-type=winxp \
-v

virsh domblklist windows2016

virsh change-media --domain windows2016 hdb /home/kvm/cn_windows_server_2016_9718765_x64.iso

virt-viewer windows10

virsh shutdown windows10
virsh destroy windows10
virsh undefine windows10
rm -rf /home/kvm/disk/windows10.img
qemu-img create -f qcow2 /home/kvm/disk/windows10.img 300G


virt-install --name=windows10 \
--virt-type=kvm \
--vcpus=2 \
--memory=4096 \
--boot cdrom  \
--disk path=/home/kvm/disk/windows10.img,bus='ide' \
--cdrom=/home/kvm/cn_windows_10_business_edition_1909_x64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--os-type=winxp \
-v



virt-viewer windows7

virsh shutdown windows7
virsh destroy windows7
virsh undefine windows7
rm -rf /home/kvm/disk/windows7.img
qemu-img create -f qcow2 /home/kvm/disk/windows7.img 300G


virt-install --name=windows7 \
--virt-type=kvm \
--vcpus=4 \
--memory=4096 \
--boot cdrom  \
--disk path=/home/kvm/disk/windows7.img,bus='ide' \
--cdrom=/home/kvm/cn_windows_7_enterprise_677685_x64.iso \
--network bridge=vbr0 \
--network bridge=vbr128 \
--network bridge=vbr129 \
--network bridge=virbr0 \
--graphics vnc,listen=0.0.0.0 \
--os-type=winxp \
-v


virt-clone -o ics-serverl  \
-n ics-server99  \
-f /home/kvm/disk/ics-server99.img


virt-clone -o windows2016  \
-n windows-ics-server30  \
-f /home/kvm/disk/windows-ics-server30.img

virt-clone -o windows2016  \
-n windows-ics-server40  \
-f /home/kvm/disk/windows-ics-server40.img

sysctl kernel.hostname=ics-server99
echo 'ics-server99' > /etc/hostname





mount -t nfs 172.21.32.59:/data/ics/conf /opt/deploy/conf
echo '172.21.32.59:/data/ics/conf /opt/deploy/conf  nfs    defaults 0      0' >> /etc/fstab

mount -t nfs 172.21.32.59:/data/logs /opt/deploy/logs
echo '172.21.32.59:/data/logs /opt/deploy/logs  nfs    defaults 0      0' >> /etc/fstab

echo '' >> /etc/hosts
echo '#Outer IP' >> /etc/hosts
echo '172.21.32.160 ics-server160' >> /etc/hosts
echo '172.21.32.161 ics-server161' >> /etc/hosts
echo '172.21.32.162 ics-server162' >> /etc/hosts
echo '#Inner(128) IP' >> /etc/hosts
echo '128.0.0.160 ics-server160' >> /etc/hosts
echo '128.0.0.161 ics-server161' >> /etc/hosts
echo '128.0.0.162 ics-server162' >> /etc/hosts
echo '#Inner(129) IP' >> /etc/hosts
echo '129.0.0.160 ics-server160' >> /etc/hosts
echo '129.0.0.161 ics-server161' >> /etc/hosts
echo '129.0.0.162 ics-server162' >> /etc/hosts
echo '#Virtual IP' >> /etc/hosts
echo '192.168.122.160 ics-server160' >> /etc/hosts
echo '192.168.122.161 ics-server161' >> /etc/hosts
echo '192.168.122.162 ics-server162' >> /etc/hosts


echo "export no_proxy=192.168.122.160,192.168.122.161,192.168.122.162,192.168.32.160,192.168.32.161,192.168.32.162,127.0.0.1" >> /etc/profile
source /etc/profile



route del default
route del -net 192.168.122.0 netmask 255.255.255.0

netstat -napt





jjdbbdhcbjmdnpdbhcilaghbbicjkldc






