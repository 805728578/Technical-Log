
rm -rf /opt/deploy/data/redis && mkdir -p /opt/deploy/data/redis
vim redis-cluster.tmpl

port ${PORT}
protected-mode no
cluster-enabled yes
cluster-config-file nodes.conf
cluster-node-timeout 5000
cluster-announce-ip 172.21.32.131
cluster-announce-port ${PORT}
cluster-announce-bus-port 1${PORT}
appendonly yes
tcp-keepalive 300
timeout 30
repl-ping-slave-period 60
hz 1
repl-timeout 60

for port in `seq 6179 100 6279`; do \
  mkdir -p ./${port}/conf \
  && PORT=${port} envsubst < ./redis-cluster.tmpl > ./${port}/conf/redis.conf \
  && mkdir -p ./${port}/data; \
done

for port in `seq 6179 100 6279`; do \
  docker run -d -ti -p ${port}:${port} -p 1${port}:1${port} \
  -v /opt/deploy/data/redis/${port}/conf/redis.conf:/usr/local/etc/redis/redis.conf:rw \
  -v /opt/deploy/data/redis/${port}/data:/data:rw \
  --restart always --name redis-${port} \
  --sysctl net.core.somaxconn=1024 172.21.32.31:5000/redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf; \
done

redis-cli --cluster create 172.21.32.130:6179 172.21.32.130:6279 172.21.32.131:6179 172.21.32.131:6279 172.21.32.132:6179 172.21.32.132:6279 --cluster-replicas 1

for port in `seq 6179 100 6279`; do \
  docker run -d -ti -p ${port}:${port} -p 1${port}:1${port} \
  -v /opt/deploy/data/redis/${port}/conf/redis.conf:/usr/local/etc/redis/redis.conf:rw \
  -v /opt/deploy/data/redis/${port}/data:/data:rw \
  --label com.docker.stack.namespace=redis \
  --restart always --name redis-${port} \
  --sysctl net.core.somaxconn=1024 172.21.32.31:5000/redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf; \
done

redis-cli --cluster create 172.21.32.112:6179 172.21.32.112:6279 172.21.32.112:6379 --cluster-replicas 0
